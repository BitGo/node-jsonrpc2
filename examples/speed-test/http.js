// Generated by CoffeeScript 1.4.0
(function() {
  var async, client, doCall, onEnd, rpc, server, start, _, _i, _results;

  _ = require("underscore");

  async = require("async");

  rpc = require("./../../src/jsonrpc");

  server = new rpc.Server();

  server.on("error", function(err) {
    return console.log(err);
  });

  server.expose("add", function(args, opts, callback) {
    return callback(null, args[0] + args[1]);
  });

  server.listen(8088, "localhost");

  client = new rpc.Client(8088, "localhost", "myuser", "secret123");

  start = new Date();

  doCall = function(data, next) {
    return client.call("add", [data, data], next);
  };

  onEnd = function() {
    var child, exec;
    console.log("");
    console.log("End in " + ((new Date()) - start) + "ms");
    exec = require("child_process").exec;
    return child = exec("netstat -putone |grep TIME_WAIT |wc -l", function(error, stdout, stderr) {
      if (error) {
        console.error(error);
      }
      console.log("netstat -putone |grep TIME_WAIT |wc -l");
      console.log(stdout);
      return console.error(stderr);
    });
  };

  async.forEachLimit((function() {
    _results = [];
    for (_i = 0; _i <= 10000; _i++){ _results.push(_i); }
    return _results;
  }).apply(this), 10, doCall, onEnd);

  /*
  (node) warning: possible EventEmitter memory leak detected. 11 listeners added. Use emitter.setMaxListeners() to increase limit.
  Trace
      at Socket.EventEmitter.addListener (events.js:175:15)
      at new HttpServerConnection (/home/michal/projects/node/node-jsonrpc2/src/http-server-connection.js:14:22)
      at Server.handleHttp.handle (/home/michal/projects/node/node-jsonrpc2/src/server.js:146:14)
      at IncomingMessage.Server.handleHttp (/home/michal/projects/node/node-jsonrpc2/src/server.js:156:3)
      at IncomingMessage.EventEmitter.emit (events.js:93:17)
      at IncomingMessage._emitEnd (http.js:366:10)
      at HTTPParser.parserOnMessageComplete [as onMessageComplete] (http.js:149:23)
      at Socket.socket.ondata (http.js:1786:22)
      at TCP.onread (net.js:404:27)
  
  End in 4474ms
  netstat -putone |grep TIME_WAIT |wc -l
  5
  */


}).call(this);
